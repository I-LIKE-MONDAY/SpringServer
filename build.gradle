plugins {
  id 'java'
  id 'org.springframework.boot' version '2.7.7'
  id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.bitc'
version = '0.0.2-SNAPSHOT'
sourceCompatibility = '11'

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-web'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
  useJUnitPlatform()
}

////////////////// 추가된 내용 ///////////////////////
// 리액트 프로젝트 폴더를 변수에 저장. 이 밑에 한줄(폴더명)만 바꿔가면서 코드 그대로 복붙해서 쓰면 됨
def frontendDir = "$projectDir/frontend"

sourceSets {
  main {
    resources {
      srcDirs = ["$projectDir/src/main/resources"]
    }
  }
}

processResources {
  dependsOn "copyReactBuildFiles"
}

// 리액트 프로젝트의 모듈 install
task installReact(type: Exec) {
  workingDir "$frontendDir"
  inputs.dir "$frontendDir"
  group = BasePlugin.BUILD_GROUP
  if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
    commandLine "npm.cmd", "audit", "fix"
    commandLine "npm.cmd", "install"
  }
  else {
    commandLine "npm", "audit", "fix"
    commandLine "npm", "install"
  }
}

// 리액트 프로젝트 빌드, 함수 선언
task buildReact(type: Exec) {
  dependsOn "installReact"
  workingDir "$frontendDir"
  inputs.dir "$frontendDir"
  group = BasePlugin.BUILD_GROUP
  // os 에 따라서 npm build 방식 변경, 리액트 프로젝트 빌드
  if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
    commandLine "npm.cmd", "run-script", "build"
  }
  else {
    commandLine "npm", "run-script", "build"
  }
}

// 리액트 프로젝트 빌드 파일을 스프링 프로젝트로 복사, 함수 선언
task copyReactBuildFiles(type: Copy) {
  dependsOn "buildReact"
  // 리액트 프로젝트 빌드 완료 파일 위치
  from "$frontendDir/build"
  // 스프링부트 프로젝트 빌드 파일 위치 중 resources/main/static 폴더
  into "$buildDir/resources/main/static"
}

// 배포 시 리액트 프로젝트의 배포 파일도 함께 포함
tasks.bootJar {
  dependsOn "copyReactBuildFiles"
}